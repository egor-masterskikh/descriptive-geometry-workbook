\startcomponent .
\startuseMPgraphic{первая основная позиционная задача}
    fig_width := \framedwidth;
    fig_height := \framedheight;

    x_max := fig_width;
    y1_max := .5 * fig_height;
    z_max := fig_height - y1_max;

    draw_axes(x_max, y1_max, z_max, 0);

    pair A[], B[], C[], P[]_[], K[];

    A.x := .85 * x_max;
    A.y := .9 * y1_max;
    A.z := .4 * z_max;

    A1 := (-A.x, -A.y);
    A2 := (-A.x, A.z);

    B.x := .1 * x_max;
    B.y := .65 * y1_max;
    B.z := .15 * z_max;

    B1 := (-B.x, -B.y);
    B2 := (-B.x, B.z);

    C.x := .4 * x_max;
    C.y := .2 * y1_max;
    C.z := .9 * z_max;

    C1 := (-C.x, -C.y);
    C2 := (-C.x, C.z);

    P1_1 := .45[A1, C1];
    P1_2 = whatever[A2, C2];
    xpart P1_2 = xpart P1_1;

    P2_1 := .75[A1, B1];
    P2_2 := whatever[A2, B2];
    xpart P2_2 = xpart P2_1;

    K1 := .47[P1_1, P2_1];
    K2 := whatever[P1_2, P2_2];
    xpart K2 = xpart K1;

    path l[], m[];

    m1 := 1.4[P2_1, P1_1]--1.4[P1_1, P2_1];
    l2 := 1.95[P2_2, P1_2]--1.2[P1_2, P2_2];

    l1_inclination := 28;

    l1 := get_line(
        0.65 * min(x_max / cosd l1_inclination, y1_max / sind l1_inclination), l1_inclination,
        K1, 0.45
    );

    draw A1--A2;
    draw B1--B2;
    draw C1--C2;
    drawinnerarrow(P1_2--P1_1, 0.7);
    drawinnerarrow(P2_2--P2_1, 0.5);

    drawinnerarrow(K1--K2, 0.75);

    draw A1--B1--C1--cycle withpen base_pen;
    draw A2--B2--C2--cycle withpen base_pen;

    draw l1 cutafter K1 withpen base_pen;
    draw l1 cutbefore K1 cutafter (l1 intersectionpoint (B1--C1)) dashed gost_dashpattern;
    draw l1 cutbefore (l1 intersectionpoint (B1--C1)) withpen base_pen;

    draw l2 cutafter K2 withpen base_pen;
    draw l2 cutbefore K2 cutafter P2_2 dashed gost_dashpattern;
    draw l2 cutbefore P2_2 withpen base_pen;
    
    draw m1;

    draw_point_circ_with_label(A1, "$A_1$", lft);
    draw_point_circ_with_label(A2, "$A_2$", ulft);
    draw_point_circ_with_label(B1, "$B_1$", rt);
    draw_point_circ_with_label(B2, "$B_2$", rt);
    draw_point_circ_with_label(C1, "$C_1$", urt);
    draw_point_circ_with_label(C2, "$C_2$", top);
    draw_point_circ_with_label(P1_1, "$1_1$", bot);
    draw_point_circ_with_label(P1_2, "$1_2$", top);
    draw_point_circ_with_label(P2_1, "$2_1$", bot);
    draw_point_circ_with_label(P2_2, "$2_2$", top);
    draw thelabel.urt("$l_2 \equiv \Delta_2 \equiv m_2$", point 0 of l2) rotatedaround(point 0 of l2, angle(P2_2 - P1_2));
    label.urt("$m_1$", point 0 of m1);
    label.top("$l_1$", point 0.95 of l1);
    draw_point_circ_with_label(K1, "$K_1$", ulft);
    draw_point_circ_with_label(K2, "$K_2$", top);
\stopuseMPgraphic
\stopcomponent